{"version":3,"sources":["components/Login.js","actions/action.js","App.js","components/Registration.js","components/DisplayEntry.js","components/Profile.js","components/About.js","components/HealthyRecipes.js","components/NutritionHelp.js","reportWebVitals.js","BaseLayout.js","store/reducer.js","index.js"],"names":["connect","dispatch","onLogin","dataObject","type","payload","login","withRouter","props","console","log","process","useState","userLogin","setUserLogin","handleOnAdd","e","target","name","value","id","class","onChange","placeholder","required","onClick","data","username","password","fetch","method","headers","body","JSON","stringify","then","response","json","result","user_id","localStorage","setItem","alert","history","push","href","App","Register","useHistory","userRegister","setUserRegister","success","state","users","userDiaryEntrys","setUserDiaryEntrys","useEffect","getUserDiaryEntry","diaryentrys","entryItems","map","entrys","date_created","meal","description","diaryentry_id","Date","now","userProfileEntry","setUserProfileEntry","HandleOnAdd","About","HealthyRecipes","NutritionHelp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","BaseLayout","children","initialState","reducer","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","getItem","userId","ReactDOM","render","StrictMode","exact","path","component","Login","Profile","document","getElementById"],"mappings":"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","file":"static/js/main.0e854e6d.chunk.js","sourcesContent":["import {NavLink} from 'react-router-dom';\nimport React from 'react'\nimport{useState} from 'react'\nimport '/Users/summerjohnson/Desktop/nutrify-me/client-side/src/App.css'\nimport {useHistory} from \"react-router-dom\"\nimport { withRouter } from 'react-router-dom'\nimport redux from 'react-redux'\nimport {connect} from 'react-redux'\nimport {login} from '../actions/action'\n\n\n\nfunction Login(props) {\n    //let history = useHistory\n    console.log(process.env.REACT_APP_SERVER_URL)\n    const [userLogin, setUserLogin] = useState({})\n   \n\n    const handleOnAdd = (e) =>{\n        setUserLogin({\n            ...userLogin,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    \n\n    const handleUserLogin = () => {\n        let data = {\n            username: userLogin.username,\n            password: userLogin.password\n        \n            \n        }\n        fetch(`${process.env.REACT_APP_SERVER_URL}/users/login`,{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*'\n            },\n            body: JSON.stringify(data)\n            }).then(response => response.json())\n            .then(result => {\n                console.log('login',result)\n                if(result.user_id) {\n                    data.user_id = result.user_id\n                    // save the username and user_id in local storage \n                    localStorage.setItem(\"username\", data.username)\n                    localStorage.setItem(\"userId\", data.user_id)\n                    let dataObject = {\"username\":data.username, \"user_id\":data.user_id}\n                    props.onLogin(dataObject)\n                    alert(\"Welcome back to nutrifyMe\")\n                    props.history.push(`/profile/${result.user_id}`)\n                }else {\n                    alert(\"No user found\")\n                  props.history.push(\"/register\")\n                }\n                \n        \n        })\n\n    }\n    \n\n    const handleUserGuests = () => {\n       props.history.push(\"/Home\")\n    }\n\n    return (\n        <div id='loginPage' >\n            <h1 class='title'>nutrifyMe</h1>\n            \n            <div class='loginBox'>\n                <h1>Login</h1>\n                <div class=\"textbox\">\n                    {/* <i class=\"fas fa-user\" ></i>    */}\n                    <input  type=\"text\" onChange={handleOnAdd} placeholder=\"Username\" name='username' required/>\n                </div>\n                <div class=\"textbox\">\n                    {/* <i class=\"fas fa-lock\" ></i> */}\n                    <input  type=\"password\" onChange={handleOnAdd} placeholder=\"Password\" name='password'required/>\n                </div>\n                <button class=\"btn\" onClick={handleUserLogin}>Login</button>\n                <a href=\"/register\"><button class=\"btn\"> Register</button></a> \n                <a href=\"/about\"><button class=\"btn\" onClick={handleUserGuests}>Login as Guest </button></a> \n                  \n            </div>\n        </div>\n\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onLogin: (dataObject) => dispatch(login(dataObject))\n        \n\n\n    }\n\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(Login))","\nexport const login = (dataObject) => {\n     \n    return {\n        type: \"LOGIN\",\n        payload: dataObject\n    }\n}\n\nexport const getUserDiaryEntry = () =>{\n    return {\n        type: \"USER\",\n        \n    }\n}","import React,{Component} from 'react'\nimport Login from './components/Login'\nimport './App.css'\n\n\nfunction App() {\n  return(\n    <div>\n      \n       <Login />\n      \n      \n    </div>\n    \n  )\n}\n\n\nexport default App","import {NavLink} from 'react-router-dom';\nimport React from 'react'\nimport {useState} from 'react'\nimport '/Users/summerjohnson/Desktop/nutrify-me/client-side/src/App.css'\nimport {useHistory} from \"react-router-dom\"\n\n\n\nfunction Register(props) {\n   let history = useHistory()\n    \n    const [userRegister, setUserRegister] = useState({})\n\n    const handleOnAdd = (e) =>{\n        setUserRegister({\n            ...userRegister,\n            [e.target.name]: e.target.value\n        })\n    }\n    const handleUserRegister = () => {\n        \n        fetch(`${process.env.REACT_APP_SERVER_URL}/users/register`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        ,\n        body: JSON.stringify(userRegister)\n        }).then(result => result.json())\n        .then(result => {\n            if(result.success) {\n                alert(\"Successfully Registered!\")\n                props.history.push(\"/\")\n            }else {\n                alert(\"Error Try Again!\")\n            }\n        }) \n        \n    }\n\n\n    return(\n        <div id=\"registerPage\">\n            <h1 class='title'>nutrifyMe</h1>\n           \n           \n           \n            <div class='loginBox'>\n            \n                <h1>Register</h1>\n                <div class=\"textbox\">\n                    {/* <i class=\"fas fa-user\" aria-hidden=\"true\"></i>    */}\n                    <input  type=\"text\" onChange={handleOnAdd} placeholder=\"Username\" name='username' required/>\n                </div>\n                <div class=\"textbox\">\n                    {/* <i class=\"fas fa-lock\" aria-hidden=\"true\"></i> */}\n                    <input  type=\"password\" onChange={handleOnAdd} placeholder=\"Password\" name='password'  required/>\n                </div>\n                <button class=\"btn\" onClick={handleUserRegister}>Register</button>\n                \n            </div>\n\n\n        </div>\n    )\n}\n\nexport default Register","\nimport React, { useEffect } from 'react'\nimport {useState} from 'react'\nimport {connect} from 'react-redux'\n\n\n\n\nfunction DisplayEntry (props) {\n\n    const [userDiaryEntrys, setUserDiaryEntrys]= useState([])\n   \n\n    useEffect(() => {\n        getUserDiaryEntry()\n    }, [])\n    const getUserDiaryEntry = () => {\n        fetch(`SERVER_URL/profiles/entry/${props.user_id}`)\n            .then(response => response.json())\n            .then(result => {\n                console.log(\"result\",result)\n                console.log(result.diaryentrys)\n                setUserDiaryEntrys(result.diaryentrys)\n            })\n    }\n\n    const deleteDiaryEntry = (diaryentry_id) => {\n        console.log(userDiaryEntrys)\n        //let diaryentryid = userDiaryEntrys[0].diaryentry_id\n        \n        console.log('diaryentry_id', diaryentry_id )\n        \n        fetch(`${process.env.REACT_APP_SERVER_URL}/profiles/entry/${diaryentry_id}`,{\n            method: 'DELETE'\n        }).then(response => response.json())\n        .then(result => {\n            if(result.success) {\n                getUserDiaryEntry()\n                alert(\"Entry Deleted!\")\n            }else {\n                alert(\"Error Try Again!\")\n            }\n        \n    })\n}\n//     const updateDiaryEntry = (diaryentry_id) => {\n//         console.log(userDiaryEntrys)\n//         //let diaryentryid = userDiaryEntrys[0].diaryentry_id\n        \n//         console.log('diaryentry_id', diaryentry_id )\n        \n//         fetch(`http://localhost:8080/profile/entryupdate/${diaryentry_id}`,{\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json'\n//             },\n//             body: JSON.stringify(diaryentry_id)\n//         }).then(result => result.json())\n//         .then(result => {\n//             if(result.success) {\n//                 alert(\"Entry Updated!\")\n//             }else {\n//                 alert(\"Error Try Again!\")\n//             }\n        \n//     })\n// }\n    const entryItems = userDiaryEntrys.map((entrys) => {\n        return (\n            <div >\n                <div key = {entrys.diaryentry_id}>\n                    <li class=\"displayDiaryEntrys\" > \n                        \n                        <label>{entrys.date_created}</label>\n                        <label>{entrys.meal}</label>\n                        <label>{entrys.description}</label>\n                       <button class=\"deleteBTN\" onClick = {() => deleteDiaryEntry(entrys.diaryentry_id)} >Delete</button>\n                       {/* <button class=\"deleteBTN\" onClick = {() => updateDiaryEntry(entrys.diaryentry_id)} >Delete</button> */}\n                        \n                    </li>\n                </div>\n               \n            </div>\n                \n            \n        )})\n              \n\n    \n    \n   return(\n       <div>\n           {entryItems}\n       </div>\n   )\n   \n    \n}\nconst mapStateToProps = (state) => {\n    return {\n        user_id: state.users.user_id\n    }\n}\n\n\nexport default connect(mapStateToProps)(DisplayEntry)","import React, { useEffect } from 'react'\nimport {useState} from 'react'\nimport '/Users/summerjohnson/Desktop/nutrify-me/client-side/src/App.css'\nimport {connect} from 'react-redux'\nimport { getUserDiaryEntry } from '../actions/action'\nimport DisplayEntry from \"./DisplayEntry\"\n\n\nconst timestamp = Date.now()\nfunction Profile(props) {\n\n    const [userProfileEntry, setUserProfileEntry]= useState({user_id:props.user_id})\n    console.log(userProfileEntry)\n\n    const HandleOnAdd = (e) => {\n        setUserProfileEntry({\n            ...userProfileEntry,\n            [e.target.name]: e.target.value\n        })\n        \n    }\n    const HandleUserProfileEntry = () => {\n        fetch(`${process.env.REACT_APP_SERVER_URL}/profiles/entry`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n        ,\n        body: JSON.stringify(userProfileEntry)\n        }).then(response => response.json())\n        .then(result => {\n            if(result.success) {\n                alert(\"Entry Added!\")\n            }else {\n                alert(\"Error Try Again!\")\n            }\n        \n        })\n     }\n    \n  \n            \n\n    \n    \n\n    \n     return(\n            <div id=\"profilePage\">\n                <div id='headerDisplay'>\n                    <h1 id='headerNutrifyMe'>nutrifyMe</h1>\n                    <a href=\"/HealthyRecipes\"><button class=\"btn\">Healthy Recipes</button></a>\n                    <a href=\"/NutritionHelp\"><button class=\"btn\"> Nutrition Help</button></a>\n                    <a href=\"/login\"><button class=\"btn\"> Log out</button></a>\n                    \n                </div>\n                \n                <div>\n                    <div class=\"inputEntry\">\n                        <input type='textbox' onChange={HandleOnAdd} placeholder=\"Enter: Breakfast, Lunch, Dinner\" name=\"meal\" required/>\n                        <input type='textbox' onChange={HandleOnAdd} placeholder=\"Enter Meal Description\" name=\"description\" required />\n                        <button onClick={HandleUserProfileEntry}>Add</button>\n                        \n                    </div>\n                </div>\n               \n                <h2 class=\"foodDiaryTitle\">Food Diary</h2>\n                    <DisplayEntry /> \n                \n\n            </div>\n        )\n        \n  \n    \n}\n    const mapStateToProps = (state) => {\n        return {\n            user_id: state.users.user_id\n        }\n\n}\n\nexport default connect(mapStateToProps)(Profile)\n    ","import {NavLink} from 'react-router-dom';\nimport React from 'react'\nimport '/Users/summerjohnson/Desktop/nutrify-me/client-side/src/App.css'\n\n\nfunction About () {\n    return(\n        <div id=\"About\">\n            \n            <div id='headerDisplay'>\n                <h1 class='aboutNutrifyColor'>nutrifyMe</h1>\n                \n            </div>\n            <div class=\"aboutContainer\">\n                <h1>About </h1>\n                <p>\n                    Welcome! <b>nutrifyMe</b> was created with the purpose of helping people create food diarys, access healthy recipes and search nutrition information.\n                    All to help improve peoples nutritional awareness and help them meet their health goals! \n                </p>\n                <a href=\"/register\"><button class=\"btn\"> Register Now</button></a>\n            </div>\n        </div>\n    )\n}\n\nexport default About","import React from 'react'\n\nfunction HealthyRecipes () {\n    return (\n        <div id=\"HealthyRecipes\">\n            <div id='headerDisplay'>\n                <h1>nutrifyMe</h1>\n                <h3>My Profile</h3>\n                <a href=\"/NutritionHelp\"><button class=\"btn\"> Nutrition Help</button></a>\n                <a href=\"/login\"><button class=\"btn\"> Log out</button></a>\n            </div>\n        </div>          \n    )\n}\n\nexport default HealthyRecipes","import React from 'react'\n// var unirest = require(\"unirest\");\n// var req = unirest(\"POST\", \"https://bigovenvolodimir-kudriachenkov1.p.rapidapi.com/getFoodGlossaryArticleByTerm\");\n\nfunction NutritionHelp () {\n\n            \n\n        \n\n        {/*req.headers({\n            \"content-type\": \"application/x-www-form-urlencoded\",\n            \"x-rapidapi-key\": \"117dd43122msh8b4c065caf97f0fp1b70ffjsnb073b9247b09\",\n            \"x-rapidapi-host\": \"BigOvenvolodimir-kudriachenkoV1.p.rapidapi.com\",\n            \"useQueryString\": true\n        });\n\n        req.form({\n            \"bigovenUsername\": \"SJ-CODES\",\n            \"term\": \"apple\",\n            \"apiKey\": \"<REQUIRED>\",\n            \"bigovenPassword\": \"Africansafari1\"\n        });\n\n\n        req.end(function (res) {\n            if (res.error) throw new Error(res.error);\n\n            console.log(res.body);\n        });*/}\n    return (\n        <div id=\"NutritionHelp\">\n            <div id='headerDisplay'>\n                <h1>nutrifyMe</h1>\n                <h3>MyProfile</h3>\n                <a href=\"/HealthyRecipes\"><button class=\"btn\">Healthy Recipes</button></a>\n                <a href=\"/login\"><button class=\"btn\"> Log out</button></a>\n            </div>\n                \n        </div>\n    )\n}\n\nexport default NutritionHelp","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport { Component } from \"react\"\nimport Checkdelete from \"./components/checkdelete\"\nimport Footer from './components/Footer'\n\nfunction BaseLayout(props) {\n    return(\n        <div>\n             \n             {props.children}\n             {/* <Footer /> */}\n            \n        </div>\n    )\n}\n\nexport default BaseLayout","const initialState = {\n    users: {}\n    \n}\n\nconst reducer = (state = initialState, action) => {\n\n    if(action.type == 'LOGIN') {\n        return {\n            ...state,\n            users: action.payload\n        }\n    }else{\n        return state\n    }\n}\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Register from './components/Registration';\nimport Profile from './components/Profile';\nimport About from './components/About';\nimport Login from './components/Login';\nimport HealthyRecipes from './components/HealthyRecipes'\nimport NutritionHelp from './components/NutritionHelp'\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport BaseLayout from './BaseLayout';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { createStore } from 'redux';\nimport reducer from './store/reducer';\nimport {Provider} from 'react-redux'\n\n\nconst store = createStore(reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()) \n\n// get the value from local storage \nconst username = localStorage.getItem(\"username\")\nconst userId = localStorage.getItem(\"userId\")\n\n// perform a dispatch and update the global state \nstore.dispatch({type: 'LOGIN',payload: { username: username, user_id: userId}})\n\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <Provider store={store}>\n        <BrowserRouter>\n          <BaseLayout>\n              <Switch>\n                    <Route exact path='/' component= {App}/>\n                    <Route exact path ='/Login' component= {Login} />\n                    <Route exact path ='/Register' component= {Register} />\n                    <Route exact path = '/Profile/:user_id' component= {Profile} />\n                    <Route exact path = '/About' component= {About} />    \n                    <Route exact path = '/HealthyRecipes' component= {HealthyRecipes} />    \n                    <Route exact path = '/NutritionHelp' component= {NutritionHelp} />    \n              </Switch>\n          </BaseLayout>\n          \n        </BrowserRouter>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}